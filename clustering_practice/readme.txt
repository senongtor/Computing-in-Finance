In the clustering package, I Stored all the raw data to a arraylist and randomly generated 500 points as the initial centroids then stored them into clusters. And I made an arraylist to store all the cluster objects. Then I did an assign method which was embeded in a loop over all the points in the arraylist where all the data were saved. I created two label variables(labelafter, labelbefore) to store the indices of the cluster in its clusterlist arraylist so that we can track at which were our points.
About finding the cluster centroids, my intuition was that after iteration, all the labels(labelafter) of points in the points arraylist should be the same as the label(labelbefore) before iteration. I made a while loop and this loop stops when for all points their labelafter=labelbefore. In order to enter the loop, I initialized my labels differently.
Continueing the procedure, each point was added to its nearest cluster by comparing the distance between all the initial centroids with itself. After that, each point got a labelbefore indicating which cluster it belonged to. As the data were all finished assigning, I calculated the mean values of each cluster and gave the value to centroids. Thus they were new centroids and I did assign method again and every point got a labelafter. Then I checked if they were equal and proceeded.
This procedure generally converge to a solution after 26 iterations.


In the cluster2 package, since we were only working on fixed size which was 20. I changed the assign method a little bit. Firstly, put all the unassigned points in a hashset. Then For each cluster, try to find the 20 nearest points. Generally, we build a heap with the comparator comparing the distances between the cluster centroid and all the unassigned points and do extract min 20 times for one cluster. Also, the points that are added to that cluster get its index as label. Stopping criteria is still the same, i.e., we stop when the label of the points stop changing. But the time this procedure takes is highly dependent on the initial centroids. 